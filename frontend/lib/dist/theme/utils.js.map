{"version":3,"file":"utils.js","names":["getLuminance","transparentize","camelcase","decamelize","cloneDeep","isObject","merge","once","CustomThemeConfig","logError","localStorageAvailable","LocalStore","baseTheme","darkTheme","lightTheme","isDarkThemeInQueryParams","isLightThemeInQueryParams","fonts","computeDerivedColors","createEmotionColors","createBaseUiTheme","AUTO_THEME_NAME","CUSTOM_THEME_NAME","mergeTheme","theme","injectedTheme","themeConfigProto","createTheme","name","getMergedLightTheme","_window$__streamlit","window","__streamlit","LIGHT_THEME","getMergedDarkTheme","_window$__streamlit2","DARK_THEME","getSystemTheme","matchMedia","matches","createAutoTheme","createPresetThemes","isPresetTheme","themeConfig","presetThemeNames","map","t","includes","fontToEnum","font","fontStyle","Object","keys","find","fontType","defaultFont","FontFamily","SANS_SERIF","parsedFontStyle","toUpperCase","fontEnumToString","undefined","toString","bgColorToBaseString","bgColor","isColor","strColor","s","Option","style","color","createEmotionTheme","themeInput","baseThemeConfig","arguments","length","genericColors","genericFonts","emotion","radii","fontSizes","customColors","parsedFont","parsedColors","entries","reduce","colors","_ref","key","concat","secondaryBackgroundColor","secondaryBg","backgroundColor","primaryColor","primary","textColor","bodyText","skeletonBackgroundColor","widgetBackgroundColor","widgetBorderColor","newGenericColors","conditionalOverrides","checkboxRadius","md","addPxUnit","baseWidgetRadius","lg","tinyFontSize","twoSm","twoSmPx","smallFontSize","sm","smPx","baseFontSize","mdPx","bodyFont","headingFont","codeFont","toThemeInput","toExportedTheme","base","completeThemeInput","partialInput","themeName","inSidebar","BaseTheme","DARK","startingTheme","basewebTheme","primitives","getCachedTheme","cachedThemeStr","localStorage","getItem","ACTIVE_THEME","JSON","parse","deleteOldCachedThemes","CACHED_THEME_VERSION","CACHED_THEME_BASE_KEY","removeItem","i","setCachedTheme","cachedTheme","setItem","stringify","removeCachedTheme","getHostSpecifiedTheme","getDefaultTheme","whiteSpace","computeSpacingStyle","value","split","marginValue","spacing","none","join","hasLightBackgroundColor","getDividerColors","blue","blue60","blue90","green","green60","green90","orange","orange60","orange90","red","red60","red90","violet","purple60","purple80","gray","gray40","gray70","grey","rainbow","getMarkdownTextColors","red80","red70","orange100","yellow","yellow100","yellow40","blue80","blue50","purple50","purple","purple100","gray80","getMarkdownBgColors","redbg","orangebg","yellow70","yellowbg","greenbg","bluebg","violetbg","purplebg","graybg","getGray70","gray30","getGray30","gray85","getGray90","gray90","gray10","getBlueArrayAsc","blue10","blue20","blue30","blue40","blue70","blue100","getBlueArrayDesc","getSequentialColorsArray","getDivergingColorsArray","red100","red50","red30","getCategoricalColorsArray","red40","blueGreen80","green40","orange80","orange50","getDecreasingRed","getIncreasingGreen","getWrappedHeadersStyle","fontSize","xl","fontWeight","mdLg","n"],"sources":["../../src/theme/utils.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getLuminance, transparentize } from \"color2k\"\nimport camelcase from \"camelcase\"\nimport decamelize from \"decamelize\"\nimport cloneDeep from \"lodash/cloneDeep\"\nimport isObject from \"lodash/isObject\"\nimport merge from \"lodash/merge\"\nimport once from \"lodash/once\"\n\nimport {\n  CustomThemeConfig,\n  ICustomThemeConfig,\n} from \"@streamlit/lib/src/proto\"\nimport { logError } from \"@streamlit/lib/src/util/log\"\nimport {\n  localStorageAvailable,\n  LocalStore,\n} from \"@streamlit/lib/src/util/storageUtils\"\nimport {\n  baseTheme,\n  CachedTheme,\n  darkTheme,\n  EmotionTheme,\n  lightTheme,\n  ThemeConfig,\n  ThemeSpacing,\n} from \"@streamlit/lib/src/theme\"\nimport {\n  isDarkThemeInQueryParams,\n  isLightThemeInQueryParams,\n} from \"@streamlit/lib/src/util/utils\"\n\nimport { fonts } from \"./primitives/typography\"\nimport {\n  computeDerivedColors,\n  createEmotionColors,\n  DerivedColors,\n} from \"./getColors\"\nimport { createBaseUiTheme } from \"./createThemeUtil\"\n\nexport const AUTO_THEME_NAME = \"Use system setting\"\nexport const CUSTOM_THEME_NAME = \"Custom Theme\"\n\ndeclare global {\n  interface Window {\n    __streamlit?: {\n      LIGHT_THEME: ICustomThemeConfig\n      DARK_THEME: ICustomThemeConfig\n    }\n  }\n}\n\nfunction mergeTheme(\n  theme: ThemeConfig,\n  injectedTheme: ICustomThemeConfig | undefined\n): ThemeConfig {\n  // We confirm the injectedTheme is a valid object before merging it\n  // since the type makes assumption about the implementation of the\n  // injected object.\n  if (injectedTheme && isObject(injectedTheme)) {\n    const themeConfigProto = new CustomThemeConfig(injectedTheme)\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return createTheme(theme.name, themeConfigProto, theme)\n  }\n\n  return theme\n}\n\nexport const getMergedLightTheme = once(() =>\n  mergeTheme(lightTheme, window.__streamlit?.LIGHT_THEME)\n)\nexport const getMergedDarkTheme = once(() =>\n  mergeTheme(darkTheme, window.__streamlit?.DARK_THEME)\n)\n\nexport const getSystemTheme = (): ThemeConfig => {\n  return window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ? getMergedDarkTheme()\n    : getMergedLightTheme()\n}\n\nexport const createAutoTheme = (): ThemeConfig => ({\n  ...getSystemTheme(),\n  name: AUTO_THEME_NAME,\n})\n\n// Update auto theme in case it has changed\nexport const createPresetThemes = (): ThemeConfig[] => [\n  createAutoTheme(),\n  getMergedLightTheme(),\n  getMergedDarkTheme(),\n]\n\nexport const isPresetTheme = (themeConfig: ThemeConfig): boolean => {\n  const presetThemeNames = createPresetThemes().map((t: ThemeConfig) => t.name)\n  return presetThemeNames.includes(themeConfig.name)\n}\n\nexport const fontToEnum = (font: string): CustomThemeConfig.FontFamily => {\n  const fontStyle = Object.keys(fonts).find(\n    (fontType: string) => fonts[fontType] === font\n  )\n  const defaultFont = CustomThemeConfig.FontFamily.SANS_SERIF\n  if (fontStyle) {\n    const parsedFontStyle = decamelize(fontStyle).toUpperCase()\n    return parsedFontStyle in CustomThemeConfig.FontFamily\n      ? // @ts-expect-error\n        CustomThemeConfig.FontFamily[parsedFontStyle]\n      : defaultFont\n  }\n  return defaultFont\n}\n\nexport const fontEnumToString = (\n  font: CustomThemeConfig.FontFamily | null | undefined\n): string | undefined =>\n  font !== null &&\n  font !== undefined && // font can be 0 for sans serif\n  font in CustomThemeConfig.FontFamily\n    ? fonts[\n        camelcase(\n          CustomThemeConfig.FontFamily[font].toString()\n        ) as keyof typeof fonts\n      ]\n    : undefined\n\nexport const bgColorToBaseString = (bgColor?: string): string =>\n  bgColor === undefined || getLuminance(bgColor) > 0.5 ? \"light\" : \"dark\"\n\nexport const isColor = (strColor: string): boolean => {\n  const s = new Option().style\n  s.color = strColor\n  return s.color !== \"\"\n}\n\nexport const createEmotionTheme = (\n  themeInput: Partial<ICustomThemeConfig>,\n  baseThemeConfig = baseTheme\n): EmotionTheme => {\n  const { genericColors, genericFonts } = baseThemeConfig.emotion\n  const { font, radii, fontSizes, ...customColors } = themeInput\n\n  const parsedFont = fontEnumToString(font)\n\n  const parsedColors = Object.entries(customColors).reduce(\n    (colors: Record<string, string>, [key, color]) => {\n      // @ts-expect-error\n      if (isColor(color)) {\n        // @ts-expect-error\n        colors[key] = color\n      } else if (isColor(`#${color}`)) {\n        colors[key] = `#${color}`\n      }\n      return colors\n    },\n    {}\n  )\n\n  // TODO: create an enum for this. Updating everything if a\n  // config option changes is a pain\n  // Mapping from CustomThemeConfig to color primitives\n  const {\n    secondaryBackgroundColor: secondaryBg,\n    backgroundColor: bgColor,\n    primaryColor: primary,\n    textColor: bodyText,\n    skeletonBackgroundColor,\n    widgetBackgroundColor,\n    widgetBorderColor,\n  } = parsedColors\n\n  const newGenericColors = { ...genericColors }\n\n  if (primary) newGenericColors.primary = primary\n  if (bodyText) newGenericColors.bodyText = bodyText\n  if (secondaryBg) newGenericColors.secondaryBg = secondaryBg\n  if (bgColor) newGenericColors.bgColor = bgColor\n  if (widgetBackgroundColor)\n    newGenericColors.widgetBackgroundColor = widgetBackgroundColor\n  if (widgetBorderColor) newGenericColors.widgetBorderColor = widgetBorderColor\n  if (skeletonBackgroundColor)\n    newGenericColors.skeletonBackgroundColor = skeletonBackgroundColor\n\n  const conditionalOverrides: any = {}\n\n  if (radii) {\n    conditionalOverrides.radii = {\n      ...baseThemeConfig.emotion.radii,\n    }\n\n    if (radii.checkboxRadius)\n      conditionalOverrides.radii.md = addPxUnit(radii.checkboxRadius)\n    if (radii.baseWidgetRadius)\n      conditionalOverrides.radii.lg = addPxUnit(radii.baseWidgetRadius)\n  }\n\n  if (fontSizes) {\n    conditionalOverrides.fontSizes = {\n      ...baseThemeConfig.emotion.fontSizes,\n    }\n\n    if (fontSizes.tinyFontSize) {\n      conditionalOverrides.fontSizes.twoSm = addPxUnit(fontSizes.tinyFontSize)\n      conditionalOverrides.fontSizes.twoSmPx = fontSizes.tinyFontSize\n    }\n\n    if (fontSizes.smallFontSize) {\n      conditionalOverrides.fontSizes.sm = addPxUnit(fontSizes.smallFontSize)\n      conditionalOverrides.fontSizes.smPx = fontSizes.smallFontSize\n    }\n\n    if (fontSizes.baseFontSize) {\n      conditionalOverrides.fontSizes.md = addPxUnit(fontSizes.baseFontSize)\n      conditionalOverrides.fontSizes.mdPx = fontSizes.baseFontSize\n    }\n  }\n\n  return {\n    ...baseThemeConfig.emotion,\n    colors: createEmotionColors(newGenericColors),\n    genericColors: newGenericColors,\n    genericFonts: {\n      ...genericFonts,\n      ...(parsedFont && {\n        bodyFont: themeInput.bodyFont ? themeInput.bodyFont : parsedFont,\n        headingFont: themeInput.bodyFont ? themeInput.bodyFont : parsedFont,\n        codeFont: themeInput.codeFont\n          ? themeInput.codeFont\n          : genericFonts.codeFont,\n      }),\n    },\n    ...conditionalOverrides,\n  }\n}\n\nexport const toThemeInput = (\n  theme: EmotionTheme\n): Partial<CustomThemeConfig> => {\n  const { colors, genericFonts } = theme\n  return {\n    primaryColor: colors.primary,\n    backgroundColor: colors.bgColor,\n    secondaryBackgroundColor: colors.secondaryBg,\n    textColor: colors.bodyText,\n    font: fontToEnum(genericFonts.bodyFont),\n  }\n}\n\nexport type ExportedTheme = {\n  base: string\n  primaryColor: string\n  backgroundColor: string\n  secondaryBackgroundColor: string\n  textColor: string\n  font: string\n} & DerivedColors\n\nexport const toExportedTheme = (theme: EmotionTheme): ExportedTheme => {\n  const { genericColors } = theme\n  const themeInput = toThemeInput(theme)\n\n  // At this point, we know that all of the fields of themeInput are populated\n  // (since we went \"backwards\" from a theme -> themeInput), but typescript\n  // doesn't know this, so we have to cast each field to string.\n  return {\n    primaryColor: themeInput.primaryColor as string,\n    backgroundColor: themeInput.backgroundColor as string,\n    secondaryBackgroundColor: themeInput.secondaryBackgroundColor as string,\n    textColor: themeInput.textColor as string,\n\n    base: bgColorToBaseString(themeInput.backgroundColor),\n    font: fontEnumToString(themeInput.font) as string,\n\n    ...computeDerivedColors(genericColors),\n  }\n}\n\nconst completeThemeInput = (\n  partialInput: Partial<CustomThemeConfig>,\n  baseTheme: ThemeConfig\n): CustomThemeConfig => {\n  return new CustomThemeConfig({\n    ...toThemeInput(baseTheme.emotion),\n    ...partialInput,\n  })\n}\n\nexport const createTheme = (\n  themeName: string,\n  themeInput: Partial<CustomThemeConfig>,\n  baseThemeConfig?: ThemeConfig,\n  inSidebar = false\n): ThemeConfig => {\n  if (baseThemeConfig) {\n    themeInput = completeThemeInput(themeInput, baseThemeConfig)\n  } else if (themeInput.base === CustomThemeConfig.BaseTheme.DARK) {\n    themeInput = completeThemeInput(themeInput, darkTheme)\n  } else {\n    themeInput = completeThemeInput(themeInput, lightTheme)\n  }\n\n  // We use startingTheme to pick a set of \"auxiliary colors\" for widgets like\n  // the success/info/warning/error boxes and others; these need to have their\n  // colors tweaked to work well with the background.\n  //\n  // For our auxiliary colors, we pick colors that look reasonable based on the\n  // theme's backgroundColor instead of picking them using themeInput.base.\n  // This way, things will look good even if a user sets\n  // themeInput.base === LIGHT and themeInput.backgroundColor === \"black\".\n  const bgColor = themeInput.backgroundColor as string\n  const startingTheme = merge(\n    cloneDeep(\n      baseThemeConfig\n        ? baseThemeConfig\n        : getLuminance(bgColor) > 0.5\n        ? lightTheme\n        : darkTheme\n    ),\n    { emotion: { inSidebar } }\n  )\n\n  const emotion = createEmotionTheme(themeInput, startingTheme)\n\n  return {\n    ...startingTheme,\n    name: themeName,\n    emotion,\n    basewebTheme: createBaseUiTheme(emotion, startingTheme.primitives),\n  }\n}\n\nexport const getCachedTheme = (): ThemeConfig | null => {\n  if (!localStorageAvailable()) {\n    return null\n  }\n\n  const cachedThemeStr = window.localStorage.getItem(LocalStore.ACTIVE_THEME)\n  if (!cachedThemeStr) {\n    return null\n  }\n\n  const { name: themeName, themeInput }: CachedTheme =\n    JSON.parse(cachedThemeStr)\n  switch (themeName) {\n    case lightTheme.name:\n      return getMergedLightTheme()\n    case darkTheme.name:\n      return getMergedDarkTheme()\n    default:\n      // At this point we're guaranteed that themeInput is defined.\n      return createTheme(themeName, themeInput as Partial<CustomThemeConfig>)\n  }\n}\n\nconst deleteOldCachedThemes = (): void => {\n  const { CACHED_THEME_VERSION, CACHED_THEME_BASE_KEY } = LocalStore\n  const { localStorage } = window\n\n  // Pre-release versions of theming stored cached themes under the key\n  // \"stActiveTheme\".\n  localStorage.removeItem(\"stActiveTheme\")\n\n  // The first version of cached themes had keys of the form\n  // `stActiveTheme-${window.location.pathname}` with no version number.\n  localStorage.removeItem(CACHED_THEME_BASE_KEY)\n\n  for (let i = 1; i <= CACHED_THEME_VERSION; i++) {\n    localStorage.removeItem(`${CACHED_THEME_BASE_KEY}-v${i}`)\n  }\n}\n\nexport const setCachedTheme = (themeConfig: ThemeConfig): void => {\n  if (!localStorageAvailable()) {\n    return\n  }\n\n  deleteOldCachedThemes()\n\n  // Do not set the theme if the app has a pre-defined theme from the embedder\n  if (isLightThemeInQueryParams() || isDarkThemeInQueryParams()) {\n    return\n  }\n\n  const cachedTheme: CachedTheme = {\n    name: themeConfig.name,\n    ...(!isPresetTheme(themeConfig) && {\n      themeInput: toThemeInput(themeConfig.emotion),\n    }),\n  }\n\n  window.localStorage.setItem(\n    LocalStore.ACTIVE_THEME,\n    JSON.stringify(cachedTheme)\n  )\n}\n\nexport const removeCachedTheme = (): void => {\n  if (!localStorageAvailable()) {\n    return\n  }\n\n  window.localStorage.removeItem(LocalStore.ACTIVE_THEME)\n}\n\nexport const getHostSpecifiedTheme = (): ThemeConfig => {\n  if (isLightThemeInQueryParams()) {\n    return getMergedLightTheme()\n  }\n\n  if (isDarkThemeInQueryParams()) {\n    return getMergedDarkTheme()\n  }\n\n  return createAutoTheme()\n}\n\nexport const getDefaultTheme = (): ThemeConfig => {\n  // Priority for default theme\n  const cachedTheme = getCachedTheme()\n\n  // We shouldn't ever have auto saved in our storage in case\n  // OS theme changes but we explicitly check in case!\n  if (cachedTheme && cachedTheme.name !== AUTO_THEME_NAME) {\n    return cachedTheme\n  }\n\n  return getHostSpecifiedTheme()\n}\n\nconst whiteSpace = /\\s+/\nexport function computeSpacingStyle(\n  value: string,\n  theme: EmotionTheme\n): string {\n  if (value === \"\") {\n    return \"\"\n  }\n\n  return value\n    .split(whiteSpace)\n    .map(marginValue => {\n      if (marginValue === \"0\") {\n        return theme.spacing.none\n      }\n\n      if (!(marginValue in theme.spacing)) {\n        logError(`Invalid spacing value: ${marginValue}`)\n        return theme.spacing.none\n      }\n\n      return theme.spacing[marginValue as ThemeSpacing]\n    })\n    .join(\" \")\n}\n\nexport function hasLightBackgroundColor(theme: EmotionTheme): boolean {\n  return getLuminance(theme.colors.bgColor) > 0.5\n}\n\nexport function getDividerColors(theme: EmotionTheme): any {\n  const lightTheme = hasLightBackgroundColor(theme)\n  const blue = lightTheme ? theme.colors.blue60 : theme.colors.blue90\n  const green = lightTheme ? theme.colors.green60 : theme.colors.green90\n  const orange = lightTheme ? theme.colors.orange60 : theme.colors.orange90\n  const red = lightTheme ? theme.colors.red60 : theme.colors.red90\n  const violet = lightTheme ? theme.colors.purple60 : theme.colors.purple80\n  const gray = lightTheme ? theme.colors.gray40 : theme.colors.gray70\n\n  return {\n    blue: blue,\n    green: green,\n    orange: orange,\n    red: red,\n    violet: violet,\n    gray: gray,\n    grey: gray,\n    rainbow: `linear-gradient(to right, ${red}, ${orange}, ${green}, ${blue}, ${violet})`,\n  }\n}\n\nexport function getMarkdownTextColors(theme: EmotionTheme): any {\n  const lightTheme = hasLightBackgroundColor(theme)\n  const red = lightTheme ? theme.colors.red80 : theme.colors.red70\n  const orange = lightTheme ? theme.colors.orange100 : theme.colors.orange60\n  const yellow = lightTheme ? theme.colors.yellow100 : theme.colors.yellow40\n  const green = lightTheme ? theme.colors.green90 : theme.colors.green60\n  const blue = lightTheme ? theme.colors.blue80 : theme.colors.blue50\n  const violet = lightTheme ? theme.colors.purple80 : theme.colors.purple50\n  const purple = lightTheme ? theme.colors.purple100 : theme.colors.purple80\n  const gray = lightTheme ? theme.colors.gray80 : theme.colors.gray70\n  return {\n    red: red,\n    orange: orange,\n    yellow: yellow,\n    green: green,\n    blue: blue,\n    violet: violet,\n    purple: purple,\n    gray: gray,\n  }\n}\n\nexport function getMarkdownBgColors(theme: EmotionTheme): any {\n  const lightTheme = hasLightBackgroundColor(theme)\n\n  return {\n    redbg: transparentize(\n      theme.colors[lightTheme ? \"red80\" : \"red60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    orangebg: transparentize(theme.colors.yellow70, lightTheme ? 0.9 : 0.7),\n    yellowbg: transparentize(\n      theme.colors[lightTheme ? \"yellow70\" : \"yellow50\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    greenbg: transparentize(\n      theme.colors[lightTheme ? \"green70\" : \"green60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    bluebg: transparentize(\n      theme.colors[lightTheme ? \"blue70\" : \"blue60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    violetbg: transparentize(\n      theme.colors[lightTheme ? \"purple70\" : \"purple60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    purplebg: transparentize(\n      theme.colors[lightTheme ? \"purple90\" : \"purple80\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    graybg: transparentize(\n      theme.colors[lightTheme ? \"gray70\" : \"gray50\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n  }\n}\n\nexport function getGray70(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.gray70\n    : theme.colors.gray30\n}\n\nexport function getGray30(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.gray30\n    : theme.colors.gray85\n}\n\nexport function getGray90(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.gray90\n    : theme.colors.gray10\n}\n\nfunction getBlueArrayAsc(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return [\n    colors.blue10,\n    colors.blue20,\n    colors.blue30,\n    colors.blue40,\n    colors.blue50,\n    colors.blue60,\n    colors.blue70,\n    colors.blue80,\n    colors.blue90,\n    colors.blue100,\n  ]\n}\n\nfunction getBlueArrayDesc(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return [\n    colors.blue100,\n    colors.blue90,\n    colors.blue80,\n    colors.blue70,\n    colors.blue60,\n    colors.blue50,\n    colors.blue40,\n    colors.blue30,\n    colors.blue20,\n    colors.blue10,\n  ]\n}\n\nexport function getSequentialColorsArray(theme: EmotionTheme): string[] {\n  return hasLightBackgroundColor(theme)\n    ? getBlueArrayAsc(theme)\n    : getBlueArrayDesc(theme)\n}\n\nexport function getDivergingColorsArray(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return [\n    colors.red100,\n    colors.red90,\n    colors.red70,\n    colors.red50,\n    colors.red30,\n    colors.blue30,\n    colors.blue50,\n    colors.blue70,\n    colors.blue90,\n    colors.blue100,\n  ]\n}\n\nexport function getCategoricalColorsArray(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return hasLightBackgroundColor(theme)\n    ? [\n        colors.blue80,\n        colors.blue40,\n        colors.red80,\n        colors.red40,\n        colors.blueGreen80,\n        colors.green40,\n        colors.orange80,\n        colors.orange50,\n        colors.purple80,\n        colors.gray40,\n      ]\n    : [\n        colors.blue40,\n        colors.blue80,\n        colors.red40,\n        colors.red80,\n        colors.green40,\n        colors.blueGreen80,\n        colors.orange50,\n        colors.orange80,\n        colors.purple80,\n        colors.gray40,\n      ]\n}\n\nexport function getDecreasingRed(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.red80\n    : theme.colors.red40\n}\n\nexport function getIncreasingGreen(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.blueGreen80\n    : theme.colors.green40\n}\n\n/**\n * Return a @emotion/styled-like css dictionary to update the styles of headers, such as h1, h2, ...\n * Used for st.title, st.header, ... that are wrapped in the Sidebar or Dialogs.\n */\nexport function getWrappedHeadersStyle(theme: EmotionTheme): {\n  [cssSelector: string]: { fontSize: string; fontWeight: number }\n} {\n  return {\n    \"& h1\": {\n      fontSize: theme.fontSizes.xl,\n      fontWeight: 600,\n    },\n\n    \"& h2\": {\n      fontSize: theme.fontSizes.lg,\n      fontWeight: 600,\n    },\n\n    \"& h3\": {\n      fontSize: theme.fontSizes.mdLg,\n      fontWeight: 600,\n    },\n\n    \"& h4\": {\n      fontSize: theme.fontSizes.md,\n      fontWeight: 600,\n    },\n\n    \"& h5\": {\n      fontSize: theme.fontSizes.sm,\n      fontWeight: 600,\n    },\n\n    \"& h6\": {\n      fontSize: theme.fontSizes.twoSm,\n      fontWeight: 600,\n    },\n  }\n}\n\nfunction addPxUnit(n: number): string {\n  return `${n}px`\n}\n"],"mappings":"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"}