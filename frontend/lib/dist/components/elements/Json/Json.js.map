{"version":3,"file":"Json.js","names":["React","useRef","useTheme","JSON5","ReactJson","Clipboard","ErrorElement","hasLightBackgroundColor","ensureError","jsx","_jsx","Json","_ref","width","element","styleProp","theme","elementRef","bodyObject","JSON","parse","body","e","error","json5Error","pos","parseInt","message","replace","concat","substring","name","jsonTheme","handleCopy","copy","_elementRef$current","stringify","src","container","current","undefined","style","ref","children","collapsed","expanded","displayDataTypes","displayObjectSize","enableClipboard","fontFamily","genericFonts","codeFont","fontSize","fontSizes","sm","backgroundColor","colors","bgColor","whiteSpace"],"sources":["../../../../src/components/elements/Json/Json.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, useRef } from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\nimport JSON5 from \"json5\"\nimport ReactJson from \"react-json-view\"\nimport Clipboard from \"clipboard\"\n\nimport ErrorElement from \"@streamlit/lib/src/components/shared/ErrorElement\"\nimport { Json as JsonProto } from \"@streamlit/lib/src/proto\"\nimport {\n  EmotionTheme,\n  hasLightBackgroundColor,\n} from \"@streamlit/lib/src/theme\"\nimport { ensureError } from \"@streamlit/lib/src/util/ErrorHandling\"\n\nexport interface JsonProps {\n  width: number\n  element: JsonProto\n}\n\n/**\n * Functional element representing JSON structured text.\n */\nexport default function Json({ width, element }: JsonProps): ReactElement {\n  const styleProp = { width }\n  const theme: EmotionTheme = useTheme()\n\n  const elementRef = useRef<HTMLDivElement>(null)\n\n  let bodyObject\n  try {\n    bodyObject = JSON.parse(element.body)\n  } catch (e) {\n    const error = ensureError(e)\n    try {\n      bodyObject = JSON5.parse(element.body)\n    } catch (json5Error) {\n      // If content fails to parse as Json, rebuild the error message\n      // to show where the problem occurred.\n      const pos = parseInt(error.message.replace(/[^0-9]/g, \"\"), 10)\n      error.message += `\\n${element.body.substring(0, pos + 1)} ‚Üê here`\n      return <ErrorElement name={\"Json Parse Error\"} message={error.message} />\n    }\n  }\n\n  // Try to pick a reasonable ReactJson theme based on whether the streamlit\n  // theme's background is light or dark.\n  const jsonTheme = hasLightBackgroundColor(theme) ? \"rjv-default\" : \"monokai\"\n\n  const handleCopy = (copy: any): void => {\n    // we use ClipboardJS to do the copying, because it allows\n    // us to specify a container element. This is necessary because\n    // otherwise copying doesn't work in dialogs.\n    Clipboard.copy(JSON.stringify(copy.src), {\n      container: elementRef.current ?? undefined,\n    })\n  }\n\n  return (\n    <div data-testid=\"stJson\" style={styleProp} ref={elementRef}>\n      <ReactJson\n        src={bodyObject}\n        collapsed={!element.expanded}\n        displayDataTypes={false}\n        displayObjectSize={false}\n        name={false}\n        theme={jsonTheme}\n        enableClipboard={handleCopy}\n        style={{\n          fontFamily: theme.genericFonts.codeFont,\n          fontSize: theme.fontSizes.sm,\n          backgroundColor: theme.colors.bgColor,\n          whiteSpace: \"pre-wrap\", // preserve whitespace\n        }}\n      />\n    </div>\n  )\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAkBC,MAAM,QAAQ,OAAO;AAEnD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,SAAS,MAAM,WAAW;AAEjC,OAAOC,YAAY;AAEnB,SAEEC,uBAAuB;AAEzB,SAASC,WAAW;AAA+C,SAAAC,GAAA,IAAAC,IAAA;AAOnE;AACA;AACA;AACA,eAAe,SAASC,IAAIA,CAAAC,IAAA,EAA8C;EAAA,IAA7C;IAAEC,KAAK;IAAEC;EAAmB,CAAC,GAAAF,IAAA;EACxD,MAAMG,SAAS,GAAG;IAAEF;EAAM,CAAC;EAC3B,MAAMG,KAAmB,GAAGd,QAAQ,CAAC,CAAC;EAEtC,MAAMe,UAAU,GAAGhB,MAAM,CAAiB,IAAI,CAAC;EAE/C,IAAIiB,UAAU;EACd,IAAI;IACFA,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACN,OAAO,CAACO,IAAI,CAAC;EACvC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,MAAMC,KAAK,GAAGf,WAAW,CAACc,CAAC,CAAC;IAC5B,IAAI;MACFJ,UAAU,GAAGf,KAAK,CAACiB,KAAK,CAACN,OAAO,CAACO,IAAI,CAAC;IACxC,CAAC,CAAC,OAAOG,UAAU,EAAE;MACnB;MACA;MACA,MAAMC,GAAG,GAAGC,QAAQ,CAACH,KAAK,CAACI,OAAO,CAACC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;MAC9DL,KAAK,CAACI,OAAO,SAAAE,MAAA,CAASf,OAAO,CAACO,IAAI,CAACS,SAAS,CAAC,CAAC,EAAEL,GAAG,GAAG,CAAC,CAAC,iBAAS;MACjE,oBAAOf,IAAA,CAACJ,YAAY;QAACyB,IAAI,EAAE,kBAAmB;QAACJ,OAAO,EAAEJ,KAAK,CAACI;MAAQ,CAAE,CAAC;IAC3E;EACF;;EAEA;EACA;EACA,MAAMK,SAAS,GAAGzB,uBAAuB,CAACS,KAAK,CAAC,GAAG,aAAa,GAAG,SAAS;EAE5E,MAAMiB,UAAU,GAAIC,IAAS,IAAW;IAAA,IAAAC,mBAAA;IACtC;IACA;IACA;IACA9B,SAAS,CAAC6B,IAAI,CAACf,IAAI,CAACiB,SAAS,CAACF,IAAI,CAACG,GAAG,CAAC,EAAE;MACvCC,SAAS,GAAAH,mBAAA,GAAElB,UAAU,CAACsB,OAAO,cAAAJ,mBAAA,cAAAA,mBAAA,GAAIK;IACnC,CAAC,CAAC;EACJ,CAAC;EAED,oBACE9B,IAAA;IAAK,eAAY,QAAQ;IAAC+B,KAAK,EAAE1B,SAAU;IAAC2B,GAAG,EAAEzB,UAAW;IAAA0B,QAAA,eAC1DjC,IAAA,CAACN,SAAS;MACRiC,GAAG,EAAEnB,UAAW;MAChB0B,SAAS,EAAE,CAAC9B,OAAO,CAAC+B,QAAS;MAC7BC,gBAAgB,EAAE,KAAM;MACxBC,iBAAiB,EAAE,KAAM;MACzBhB,IAAI,EAAE,KAAM;MACZf,KAAK,EAAEgB,SAAU;MACjBgB,eAAe,EAAEf,UAAW;MAC5BQ,KAAK,EAAE;QACLQ,UAAU,EAAEjC,KAAK,CAACkC,YAAY,CAACC,QAAQ;QACvCC,QAAQ,EAAEpC,KAAK,CAACqC,SAAS,CAACC,EAAE;QAC5BC,eAAe,EAAEvC,KAAK,CAACwC,MAAM,CAACC,OAAO;QACrCC,UAAU,EAAE,UAAU,CAAE;MAC1B;IAAE,CACH;EAAC,CACC,CAAC;AAEV"}