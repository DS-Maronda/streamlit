{"version":3,"file":"ArrowTable.test.js","names":["React","screen","render","EMPTY","UNICODE","Quiver","ArrowTable","jsx","_jsx","getProps","data","element","describe","it","props","expect","getByTestId","toBeInTheDocument","queryByTestId","not"],"sources":["../../../../src/components/elements/ArrowTable/ArrowTable.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport \"@testing-library/jest-dom\"\nimport { screen } from \"@testing-library/react\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport { EMPTY, UNICODE } from \"@streamlit/lib/src/mocks/arrow\"\nimport { Quiver } from \"@streamlit/lib/src/dataframes/Quiver\"\n\nimport { ArrowTable, TableProps } from \"./ArrowTable\"\n\nconst getProps = (data: Uint8Array): TableProps => ({\n  element: new Quiver({ data }),\n})\n\ndescribe(\"st._arrow_table\", () => {\n  it(\"renders without crashing\", () => {\n    const props = getProps(UNICODE)\n    render(<ArrowTable {...props} />)\n\n    expect(screen.getByTestId(\"stTable\")).toBeInTheDocument()\n    expect(screen.getByTestId(\"stTableStyledTable\")).toBeInTheDocument()\n    expect(\n      screen.queryByTestId(\"stTableStyledEmptyTableCell\")\n    ).not.toBeInTheDocument()\n  })\n\n  it(\"renders an empty row\", () => {\n    const props = getProps(EMPTY)\n    render(<ArrowTable {...props} />)\n\n    expect(screen.getByTestId(\"stTable\")).toBeInTheDocument()\n    expect(screen.getByTestId(\"stTableStyledTable\")).toBeInTheDocument()\n    expect(\n      screen.getByTestId(\"stTableStyledEmptyTableCell\")\n    ).toBeInTheDocument()\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,2BAA2B;AAClC,SAASC,MAAM,QAAQ,wBAAwB;AAE/C,SAASC,MAAM;AACf,SAASC,KAAK,EAAEC,OAAO;AACvB,SAASC,MAAM;AAEf,SAASC,UAAU;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAErD,MAAMC,QAAQ,GAAIC,IAAgB,KAAkB;EAClDC,OAAO,EAAE,IAAIN,MAAM,CAAC;IAAEK;EAAK,CAAC;AAC9B,CAAC,CAAC;AAEFE,QAAQ,CAAC,iBAAiB,EAAE,MAAM;EAChCC,EAAE,CAAC,0BAA0B,EAAE,MAAM;IACnC,MAAMC,KAAK,GAAGL,QAAQ,CAACL,OAAO,CAAC;IAC/BF,MAAM,eAACM,IAAA,CAACF,UAAU;MAAA,GAAKQ;IAAK,CAAG,CAAC,CAAC;IAEjCC,MAAM,CAACd,MAAM,CAACe,WAAW,CAAC,SAAS,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACzDF,MAAM,CAACd,MAAM,CAACe,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACpEF,MAAM,CACJd,MAAM,CAACiB,aAAa,CAAC,6BAA6B,CACpD,CAAC,CAACC,GAAG,CAACF,iBAAiB,CAAC,CAAC;EAC3B,CAAC,CAAC;EAEFJ,EAAE,CAAC,sBAAsB,EAAE,MAAM;IAC/B,MAAMC,KAAK,GAAGL,QAAQ,CAACN,KAAK,CAAC;IAC7BD,MAAM,eAACM,IAAA,CAACF,UAAU;MAAA,GAAKQ;IAAK,CAAG,CAAC,CAAC;IAEjCC,MAAM,CAACd,MAAM,CAACe,WAAW,CAAC,SAAS,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACzDF,MAAM,CAACd,MAAM,CAACe,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACpEF,MAAM,CACJd,MAAM,CAACe,WAAW,CAAC,6BAA6B,CAClD,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACvB,CAAC,CAAC;AACJ,CAAC,CAAC"}