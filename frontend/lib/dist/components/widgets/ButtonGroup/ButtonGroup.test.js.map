{"version":3,"file":"ButtonGroup.test.js","names":["React","act","fireEvent","screen","within","render","WidgetStateManager","ButtonGroup","ButtonGroupProto","jsx","_jsx","materialIconNames","defaultSelectedIndex","expectHighlightStyle","element","should_exist","arguments","length","undefined","expectCheck","expect","not","toHaveStyle","getButtonGroupButtons","buttonGroupWidget","getByTestId","getAllByRole","getProps","elementProps","widgetProps","create","id","options","Option","content","concat","selectedContent","default","disabled","clickMode","ClickMode","SINGLE_SELECT","selectionVisualization","SelectionVisualization","ONLY_SELECTED","widgetMgr","sendRerunBackMsg","jest","fn","formsDataChanged","describe","it","props","toBeInTheDocument","buttons","toHaveLength","forEach","button","index","toHaveAttribute","icon","textContent","toContain","spyOn","setIntArrayValue","toHaveBeenCalledWith","fromUi","toHaveBeenCalledTimes","click","MULTI_SELECT","fragmentId","toBeDisabled","value","setValue","ALL_UP_TO_SELECTED","buttonToClick","disabledVisualizationOption","formId","setFormClearOnSubmit","submitForm","toHaveBeenLastCalledWith"],"sources":["../../../../src/components/widgets/ButtonGroup/ButtonGroup.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable jest/expect-expect */\nimport React from \"react\"\n\nimport { act, fireEvent, screen, within } from \"@testing-library/react\"\n\nimport \"@testing-library/jest-dom\"\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport { ButtonGroup as ButtonGroupProto } from \"@streamlit/lib/src/proto\"\n\nimport ButtonGroup, { Props } from \"./ButtonGroup\"\n\nconst materialIconNames = [\"icon\", \"icon_2\", \"icon_3\", \"icon_4\"]\nconst defaultSelectedIndex = 2\n\nconst expectHighlightStyle = (\n  element: HTMLElement,\n  should_exist = true\n): void => {\n  let expectCheck: any = expect(element)\n  if (!should_exist) {\n    expectCheck = expect.not\n  }\n  expectCheck.toHaveStyle(\"color: rgb(49, 51, 63);\")\n}\n\nconst getButtonGroupButtons = (): HTMLElement[] => {\n  const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n  return within(buttonGroupWidget).getAllByRole(\"button\")\n}\n\nconst getProps = (\n  elementProps: Partial<ButtonGroupProto> = {},\n  widgetProps: Partial<Props> = {}\n): Props => ({\n  element: ButtonGroupProto.create({\n    id: \"1\",\n    options: [\n      ButtonGroupProto.Option.create({\n        content: `:material/${materialIconNames[0]}:`,\n      }),\n      ButtonGroupProto.Option.create({\n        content: `:material/${materialIconNames[1]}:`,\n        selectedContent: \":material/icon2_selected:\",\n      }),\n      ButtonGroupProto.Option.create({\n        content: `:material/${materialIconNames[2]}:`,\n      }),\n      ButtonGroupProto.Option.create({\n        content: `:material/${materialIconNames[3]}:`,\n      }),\n    ],\n    default: [defaultSelectedIndex],\n    disabled: false,\n    clickMode: ButtonGroupProto.ClickMode.SINGLE_SELECT,\n    selectionVisualization:\n      ButtonGroupProto.SelectionVisualization.ONLY_SELECTED,\n    ...elementProps,\n  }),\n  disabled: false,\n  widgetMgr: new WidgetStateManager({\n    sendRerunBackMsg: jest.fn(),\n    formsDataChanged: jest.fn(),\n  }),\n  ...widgetProps,\n})\n\ndescribe(\"ButtonGroup widget\", () => {\n  it(\"renders without crashing\", () => {\n    const props = getProps()\n    render(<ButtonGroup {...props} />)\n\n    const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n    expect(buttonGroupWidget).toBeInTheDocument()\n  })\n\n  it(\"option-children with material-icon render correctly\", () => {\n    const props = getProps({ default: [] })\n    render(<ButtonGroup {...props} />)\n\n    const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n    const buttons = within(buttonGroupWidget).getAllByRole(\"button\")\n    expect(buttons).toHaveLength(4)\n    buttons.forEach((button, index) => {\n      expect(button).toHaveAttribute(\"kind\", \"borderlessIcon\")\n      const icon = within(button).getByTestId(\"stIconMaterial\")\n      expect(icon.textContent).toContain(materialIconNames[index])\n    })\n  })\n\n  it(\"sets widget value on mount\", () => {\n    const props = getProps()\n    jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n\n    render(<ButtonGroup {...props} />)\n    expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n      props.element,\n      props.element.default,\n      {\n        fromUi: false,\n      },\n      undefined\n    )\n  })\n\n  describe(\"ButtonGroup props should work\", () => {\n    it(\"onClick prop for single select\", () => {\n      const props = getProps()\n      jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n\n      render(<ButtonGroup {...props} />)\n\n      const buttons = getButtonGroupButtons()\n      expect(buttons).toHaveLength(4)\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        props.element.default,\n        { fromUi: false },\n        undefined\n      )\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledTimes(1)\n\n      fireEvent.click(buttons[1])\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        [1],\n        { fromUi: true },\n        undefined\n      )\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledTimes(2)\n\n      fireEvent.click(getButtonGroupButtons()[0])\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        [0],\n        { fromUi: true },\n        undefined\n      )\n\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledTimes(3)\n      // click on same button does not increase counter\n      fireEvent.click(getButtonGroupButtons()[0])\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledTimes(3)\n    })\n\n    it(\"onClick prop for multi select\", () => {\n      const props = getProps({\n        clickMode: ButtonGroupProto.ClickMode.MULTI_SELECT,\n      })\n      jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n      render(<ButtonGroup {...props} />)\n\n      const buttons = getButtonGroupButtons()\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        props.element.default,\n        { fromUi: false },\n        undefined\n      )\n\n      fireEvent.click(buttons[1])\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        [2, 1],\n        { fromUi: true },\n        undefined\n      )\n\n      fireEvent.click(getButtonGroupButtons()[0])\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        [2, 1, 0],\n        { fromUi: true },\n        undefined\n      )\n    })\n\n    it(\"passes fragmentId to onClick prop\", () => {\n      const props = getProps(\n        {},\n        {\n          fragmentId: \"myFragmentId\",\n        }\n      )\n      jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n      render(<ButtonGroup {...props} />)\n\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        props.element.default,\n        { fromUi: false },\n        \"myFragmentId\"\n      )\n\n      const button = getButtonGroupButtons()[0]\n      fireEvent.click(button)\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        [0],\n        { fromUi: true },\n        \"myFragmentId\"\n      )\n    })\n\n    it(\"can be disabled\", () => {\n      const props = getProps({}, { disabled: true })\n      render(<ButtonGroup {...props} />)\n\n      const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n      const buttons = within(buttonGroupWidget).getAllByRole(\"button\")\n      expect(buttons).toHaveLength(4)\n      buttons.forEach(button => {\n        expect(button).toBeDisabled()\n      })\n    })\n\n    it(\"sets widget value on update\", () => {\n      const props = getProps({ value: [3], setValue: true })\n      jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n\n      render(<ButtonGroup {...props} />)\n      const buttons = getButtonGroupButtons()\n      expectHighlightStyle(buttons[3])\n      expectHighlightStyle(buttons[defaultSelectedIndex], false)\n\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        props.element.default,\n        {\n          fromUi: false,\n        },\n        undefined\n      )\n    })\n\n    describe(\"visualize selection behavior\", () => {\n      it(\"visualize only selected option\", () => {\n        const props = getProps({\n          selectionVisualization:\n            ButtonGroupProto.SelectionVisualization.ONLY_SELECTED,\n        })\n        render(<ButtonGroup {...props} />)\n\n        fireEvent.click(getButtonGroupButtons()[0])\n        const buttons = getButtonGroupButtons()\n        expectHighlightStyle(buttons[0])\n        expectHighlightStyle(buttons[1], false)\n        expectHighlightStyle(buttons[2], false)\n      })\n\n      it(\"visualize all up to the selected option\", () => {\n        const props = getProps({\n          selectionVisualization:\n            ButtonGroupProto.SelectionVisualization.ALL_UP_TO_SELECTED,\n        })\n        render(<ButtonGroup {...props} />)\n\n        const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n        const buttons = within(buttonGroupWidget).getAllByRole(\"button\")\n        const buttonToClick = buttons[2]\n        fireEvent.click(buttonToClick)\n        expectHighlightStyle(buttonToClick)\n        expectHighlightStyle(buttons[0])\n        // the second button has selectedContent set, so it should not be highlighted visually\n        expectHighlightStyle(buttons[1], false)\n        expectHighlightStyle(buttons[3], false)\n      })\n\n      it(\"no default visualization when selected content present\", () => {\n        // used for example by feedback stars\n        const disabledVisualizationOption = [\n          ButtonGroupProto.Option.create({\n            content: \"Some text\",\n            selectedContent: \"Some text selected\",\n          }),\n          ButtonGroupProto.Option.create({\n            content: \"Some text 2\",\n            selectedContent: \"Some text selected 2\",\n          }),\n        ]\n        const props = getProps({\n          selectionVisualization:\n            ButtonGroupProto.SelectionVisualization.ALL_UP_TO_SELECTED,\n          options: disabledVisualizationOption,\n        })\n        render(<ButtonGroup {...props} />)\n\n        const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n        const buttons = within(buttonGroupWidget).getAllByRole(\"button\")\n        const buttonToClick = buttons[1]\n        fireEvent.click(buttonToClick)\n        expectHighlightStyle(buttonToClick, false)\n        expectHighlightStyle(buttons[0], false)\n      })\n    })\n\n    it(\"show selection content when selected and available\", () => {\n      const props = getProps({ default: [] })\n      render(<ButtonGroup {...props} />)\n\n      const buttons = getButtonGroupButtons()\n      buttons.forEach((button, index) => {\n        expect(button).toHaveAttribute(\"kind\", \"borderlessIcon\")\n        const icon = within(button).getByTestId(\"stIconMaterial\")\n        expect(icon.textContent).toContain(materialIconNames[index])\n      })\n\n      fireEvent.click(buttons[1])\n      expect(getButtonGroupButtons()[1].textContent).toContain(\n        \"icon_2_selected\"\n      )\n    })\n  })\n\n  it(\"resets its value when form is cleared\", () => {\n    // Create a widget in a clearOnSubmit form\n    const props = getProps({\n      formId: \"form\",\n      clickMode: ButtonGroupProto.ClickMode.MULTI_SELECT,\n    })\n    props.widgetMgr.setFormClearOnSubmit(\"form\", true)\n\n    jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n\n    render(<ButtonGroup {...props} />)\n\n    // Change the widget value\n    // de-select default value\n    fireEvent.click(getButtonGroupButtons()[0])\n    fireEvent.click(getButtonGroupButtons()[1])\n    let buttons = getButtonGroupButtons()\n    expectHighlightStyle(buttons[0])\n    // the second button has selectedContent set, so it should not be highlighted visually\n    expectHighlightStyle(buttons[1], false)\n    expectHighlightStyle(buttons[2], false)\n    expectHighlightStyle(buttons[3], false)\n\n    // \"Submit\" the form\n    act(() => props.widgetMgr.submitForm(\"form\", undefined))\n\n    buttons = getButtonGroupButtons()\n    // default option selected\n    expectHighlightStyle(buttons[0], false)\n    expectHighlightStyle(buttons[1], false)\n    expectHighlightStyle(buttons[2])\n    expect(props.widgetMgr.setIntArrayValue).toHaveBeenLastCalledWith(\n      props.element,\n      props.element.default,\n      { fromUi: true },\n      undefined\n    )\n  })\n})\n"],"mappings":"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"}