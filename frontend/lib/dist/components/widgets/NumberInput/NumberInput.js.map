{"version":3,"file":"NumberInput.js","names":["React","Minus","Plus","withTheme","sprintf","Input","UIInput","uniqueId","isInForm","isNullOrUndefined","labelVisibilityProtoValueToEnum","notNullOrUndefined","FormClearHelper","logWarning","NumberInput","NumberInputProto","breakpoints","TooltipIcon","Placement","Icon","InputInstructions","StyledWidgetLabelHelp","WidgetLabel","StyledInputContainer","StyledInputControl","StyledInputControls","StyledInstructionsContainer","jsx","_jsx","jsxs","_jsxs","getNonEmptyString","value","undefined","getInitialValue","props","_ref","isIntData","element","dataType","DataType","INT","storedValue","widgetMgr","getIntValue","getDoubleValue","default","getStep","_ref2","step","formatValue","_ref3","format","formatString","strStep","toString","FLOAT","includes","decimalPlaces","split","length","concat","e","String","canDecrement","min","canIncrement","max","_ref4","_element$labelVisibil","disabled","width","theme","fragmentId","elementDataType","id","elementId","formId","elementFormId","elementDefault","elementFormat","hasMin","Infinity","hasMax","setStep","useState","initialValue","dirty","setDirty","setValue","formattedValue","setFormattedValue","isFocused","setIsFocused","inputRef","useRef","formClearHelper","canDec","canInc","useEffect","commitValue","useCallback","_ref5","source","_inputRef$current","current","reportValidity","_ref6","newValue","setIntValue","setDoubleValue","Error","onBlur","fromUi","onFocus","updateFromProtobuf","formClearHelperCopy","disconnect","clearable","manageFormClearListener","_element$default","onChange","target","numValue","parseInt","parseFloat","increment","decrement","onKeyDown","key","preventDefault","onKeyPress","submitForm","className","style","children","label","labelVisibility","htmlFor","help","content","placement","TOP_RIGHT","type","placeholder","clearOnEscape","overrides","ClearIcon","Svg","color","colors","darkGray","transform","spacing","twoXL","marginRight","fill","bodyText","lineHeight","lineHeights","inputWidget","paddingRight","sm","paddingLeft","paddingBottom","paddingTop","InputContainer","borderTopRightRadius","borderBottomRightRadius","Root","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","hideNumberInputControls","onClick","tabIndex","size","hideWidgetDetails","inForm"],"sources":["../../../../src/components/widgets/NumberInput/NumberInput.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { Minus, Plus } from \"@emotion-icons/open-iconic\"\nimport { withTheme } from \"@emotion/react\"\nimport { sprintf } from \"sprintf-js\"\nimport { Input as UIInput } from \"baseui/input\"\nimport uniqueId from \"lodash/uniqueId\"\n\nimport {\n  isInForm,\n  isNullOrUndefined,\n  labelVisibilityProtoValueToEnum,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport { logWarning } from \"@streamlit/lib/src/util/log\"\nimport { NumberInput as NumberInputProto } from \"@streamlit/lib/src/proto\"\nimport { breakpoints } from \"@streamlit/lib/src/theme/primitives/breakpoints\"\nimport {\n  Source,\n  WidgetStateManager,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport InputInstructions from \"@streamlit/lib/src/components/shared/InputInstructions/InputInstructions\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nimport {\n  StyledInputContainer,\n  StyledInputControl,\n  StyledInputControls,\n  StyledInstructionsContainer,\n} from \"./styled-components\"\n\n/**\n * Return a string property from an element. If the string is\n * null or empty, return undefined instead.\n */\nfunction getNonEmptyString(\n  value: string | null | undefined\n): string | undefined {\n  return isNullOrUndefined(value) || value === \"\" ? undefined : value\n}\n\n/**\n * This function returns the initial value for the NumberInput widget\n * via the widget manager.\n */\nconst getInitialValue = (\n  props: Pick<Props, \"element\" | \"widgetMgr\">\n): number | null => {\n  const isIntData = props.element.dataType === NumberInputProto.DataType.INT\n  const storedValue = isIntData\n    ? props.widgetMgr.getIntValue(props.element)\n    : props.widgetMgr.getDoubleValue(props.element)\n  return storedValue ?? props.element.default ?? null\n}\n\nconst getStep = ({\n  step,\n  dataType,\n}: Pick<NumberInputProto, \"step\" | \"dataType\">): number => {\n  if (step) {\n    return step\n  }\n  if (dataType === NumberInputProto.DataType.INT) {\n    return 1\n  }\n  return 0.01\n}\n\n/**\n * Utilizes the sprintf library to format a number value\n * according to a given format string.\n */\nexport const formatValue = ({\n  value,\n  format,\n  step,\n  dataType,\n}: {\n  value: number | null\n  format?: string | null\n  step?: number\n  dataType: NumberInputProto.DataType\n}): string | null => {\n  if (isNullOrUndefined(value)) {\n    return null\n  }\n\n  let formatString = getNonEmptyString(format)\n\n  if (isNullOrUndefined(formatString) && notNullOrUndefined(step)) {\n    const strStep = step.toString()\n    if (\n      dataType === NumberInputProto.DataType.FLOAT &&\n      step !== 0 &&\n      strStep.includes(\".\")\n    ) {\n      const decimalPlaces = strStep.split(\".\")[1].length\n      formatString = `%0.${decimalPlaces}f`\n    }\n  }\n\n  if (isNullOrUndefined(formatString)) {\n    return value.toString()\n  }\n\n  try {\n    return sprintf(formatString, value)\n  } catch (e) {\n    logWarning(`Error in sprintf(${formatString}, ${value}): ${e}`)\n    return String(value)\n  }\n}\n\nexport const canDecrement = (\n  value: number | null,\n  step: number,\n  min: number\n): boolean => {\n  if (isNullOrUndefined(value)) {\n    return false\n  }\n  return value - step >= min\n}\n\nexport const canIncrement = (\n  value: number | null,\n  step: number,\n  max: number\n): boolean => {\n  if (isNullOrUndefined(value)) {\n    return false\n  }\n  return value + step <= max\n}\n\nexport interface Props {\n  disabled: boolean\n  element: NumberInputProto\n  widgetMgr: WidgetStateManager\n  width: number\n  theme: EmotionTheme\n  fragmentId?: string\n}\n\nexport const NumberInput: React.FC<Props> = ({\n  disabled,\n  element,\n  widgetMgr,\n  width,\n  theme,\n  fragmentId,\n}: Props): ReactElement => {\n  const {\n    dataType: elementDataType,\n    id: elementId,\n    formId: elementFormId,\n    default: elementDefault,\n    format: elementFormat,\n  } = element\n  const min = element.hasMin ? element.min : -Infinity\n  const max = element.hasMax ? element.max : +Infinity\n\n  const [step, setStep] = React.useState<number>(getStep(element))\n  const initialValue = getInitialValue({ element, widgetMgr })\n  const [dirty, setDirty] = React.useState(false)\n  const [value, setValue] = React.useState<number | null>(initialValue)\n  const [formattedValue, setFormattedValue] = React.useState<string | null>(\n    formatValue({ value: initialValue, ...element, step })\n  )\n  const [isFocused, setIsFocused] = React.useState(false)\n  const inputRef = React.useRef<HTMLInputElement | HTMLTextAreaElement>(null)\n  const formClearHelper = React.useRef(new FormClearHelper())\n  const id = React.useRef(uniqueId(\"number_input_\"))\n\n  const canDec = canDecrement(value, step, min)\n  const canInc = canIncrement(value, step, max)\n\n  // update the step if the props change\n  React.useEffect(() => {\n    setStep(getStep({ step: element.step, dataType: element.dataType }))\n  }, [element.dataType, element.step])\n\n  const commitValue = React.useCallback(\n    ({ value, source }: { value: number | null; source: Source }) => {\n      if (notNullOrUndefined(value) && (min > value || value > max)) {\n        inputRef.current?.reportValidity()\n      } else {\n        const newValue = value ?? elementDefault ?? null\n\n        switch (elementDataType) {\n          case NumberInputProto.DataType.INT:\n            widgetMgr.setIntValue(\n              { id: elementId, formId: elementFormId },\n              newValue,\n              source,\n              fragmentId\n            )\n            break\n          case NumberInputProto.DataType.FLOAT:\n            widgetMgr.setDoubleValue(\n              { id: elementId, formId: elementFormId },\n              newValue,\n              source,\n              fragmentId\n            )\n            break\n          default:\n            throw new Error(\"Invalid data type\")\n        }\n\n        setDirty(false)\n        setValue(newValue)\n        setFormattedValue(\n          formatValue({\n            value: newValue,\n            dataType: elementDataType,\n            format: elementFormat,\n            step,\n          })\n        )\n      }\n    },\n    [\n      min,\n      max,\n      inputRef,\n      widgetMgr,\n      fragmentId,\n      step,\n      elementDataType,\n      elementId,\n      elementFormId,\n      elementDefault,\n      elementFormat,\n    ]\n  )\n\n  const onBlur = (): void => {\n    if (dirty) {\n      commitValue({ value, source: { fromUi: true } })\n    }\n    setIsFocused(false)\n  }\n\n  const onFocus = (): void => {\n    setIsFocused(true)\n  }\n\n  const updateFromProtobuf = (): void => {\n    const { value } = element\n    element.setValue = false\n    setValue(value ?? null)\n    setFormattedValue(formatValue({ value: value ?? null, ...element, step }))\n    commitValue({ value: value ?? null, source: { fromUi: false } })\n  }\n\n  // on component mount, we want to update the value from protobuf if setValue is true, otherwise commit current value\n  React.useEffect(() => {\n    const formClearHelperCopy = formClearHelper.current\n    if (element.setValue) {\n      updateFromProtobuf()\n    } else {\n      commitValue({ value, source: { fromUi: false } })\n    }\n\n    return () => {\n      formClearHelperCopy.disconnect()\n    }\n\n    // I don't want to run this effect on every render, only on mount.\n    // Additionally, it's okay if commitValue changes, because we only call\n    // it once in the beginning anyways.\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [])\n\n  // update from protobuf whenever component updates if element.setValue is truthy\n  if (element.setValue) {\n    updateFromProtobuf()\n  }\n\n  const clearable = isNullOrUndefined(element.default) && !disabled\n\n  formClearHelper.current.manageFormClearListener(\n    widgetMgr,\n    element.formId,\n    () => {\n      setValue(element.default ?? null)\n      commitValue({ value, source: { fromUi: true } })\n    }\n  )\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    const { value } = e.target\n\n    if (value === \"\") {\n      setDirty(true)\n      setValue(null)\n      setFormattedValue(null)\n    } else {\n      let numValue: number\n\n      if (element.dataType === NumberInputProto.DataType.INT) {\n        numValue = parseInt(value, 10)\n      } else {\n        numValue = parseFloat(value)\n      }\n\n      setDirty(true)\n      setValue(numValue)\n      setFormattedValue(value)\n    }\n  }\n\n  const increment = React.useCallback(() => {\n    if (canInc) {\n      setDirty(true)\n      commitValue({ value: (value ?? min) + step, source: { fromUi: true } })\n    }\n  }, [value, min, step, canInc])\n\n  const decrement = React.useCallback(() => {\n    if (canDec) {\n      setDirty(true)\n      commitValue({ value: (value ?? max) - step, source: { fromUi: true } })\n    }\n  }, [value, max, step, canDec])\n\n  const onKeyDown = React.useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n      const { key } = e\n\n      switch (key) {\n        case \"ArrowUp\":\n          e.preventDefault()\n          increment()\n          break\n        case \"ArrowDown\":\n          e.preventDefault()\n          decrement()\n          break\n        default:\n      }\n    },\n    [increment, decrement]\n  )\n\n  const onKeyPress = React.useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n      if (e.key === \"Enter\") {\n        if (dirty) {\n          commitValue({ value, source: { fromUi: true } })\n        }\n        if (isInForm({ formId: elementFormId })) {\n          widgetMgr.submitForm(elementFormId, fragmentId)\n        }\n      }\n    },\n    [dirty, value, commitValue, widgetMgr, elementFormId, fragmentId]\n  )\n\n  return (\n    <div\n      className=\"stNumberInput\"\n      data-testid=\"stNumberInput\"\n      style={{ width }}\n    >\n      <WidgetLabel\n        label={element.label}\n        disabled={disabled}\n        labelVisibility={labelVisibilityProtoValueToEnum(\n          element.labelVisibility?.value\n        )}\n        htmlFor={id.current}\n      >\n        {element.help && (\n          <StyledWidgetLabelHelp>\n            <TooltipIcon\n              content={element.help}\n              placement={Placement.TOP_RIGHT}\n            />\n          </StyledWidgetLabelHelp>\n        )}\n      </WidgetLabel>\n      <StyledInputContainer\n        className={isFocused ? \"focused\" : \"\"}\n        data-testid=\"stNumberInputContainer\"\n      >\n        <UIInput\n          type=\"number\"\n          inputRef={inputRef}\n          value={formattedValue ?? \"\"}\n          placeholder={element.placeholder}\n          onBlur={() => onBlur()}\n          onFocus={() => onFocus()}\n          onChange={e => onChange(e)}\n          onKeyPress={e => onKeyPress(e)}\n          onKeyDown={e => onKeyDown(e)}\n          clearable={clearable}\n          clearOnEscape={clearable}\n          disabled={disabled}\n          aria-label={element.label}\n          id={id.current}\n          overrides={{\n            ClearIcon: {\n              props: {\n                overrides: {\n                  Svg: {\n                    style: {\n                      color: theme.colors.darkGray,\n                      // Since the close icon is an SVG, and we can't control its viewbox nor its attributes,\n                      // Let's use a scale transform effect to make it bigger.\n                      // The width property only enlarges its bounding box, so it's easier to click.\n                      transform: \"scale(1.4)\",\n                      width: theme.spacing.twoXL,\n                      marginRight: \"-1.25em\",\n                      \":hover\": {\n                        fill: theme.colors.bodyText,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            Input: {\n              props: {\n                \"data-testid\": \"stNumberInput-Input\",\n                step: step,\n                min: min,\n                max: max,\n              },\n              style: {\n                lineHeight: theme.lineHeights.inputWidget,\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                paddingRight: theme.spacing.sm,\n                paddingLeft: theme.spacing.sm,\n                paddingBottom: theme.spacing.sm,\n                paddingTop: theme.spacing.sm,\n              },\n            },\n            InputContainer: {\n              style: () => ({\n                borderTopRightRadius: 0,\n                borderBottomRightRadius: 0,\n              }),\n            },\n            Root: {\n              style: () => ({\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                borderTopRightRadius: 0,\n                borderBottomRightRadius: 0,\n                borderLeftWidth: 0,\n                borderRightWidth: 0,\n                borderTopWidth: 0,\n                borderBottomWidth: 0,\n              }),\n            },\n          }}\n        />\n        {/* We only want to show the increment/decrement controls when there is sufficient room to display the value and these controls. */}\n        {width > breakpoints.hideNumberInputControls && (\n          <StyledInputControls>\n            <StyledInputControl\n              className=\"step-down\"\n              data-testid=\"stNumberInput-StepDown\"\n              onClick={decrement}\n              disabled={!canDec || disabled}\n              tabIndex={-1}\n            >\n              <Icon\n                content={Minus}\n                size=\"xs\"\n                color={canDec ? \"inherit\" : \"disabled\"}\n              />\n            </StyledInputControl>\n            <StyledInputControl\n              className=\"step-up\"\n              data-testid=\"stNumberInput-StepUp\"\n              onClick={increment}\n              disabled={!canInc || disabled}\n              tabIndex={-1}\n            >\n              <Icon\n                content={Plus}\n                size=\"xs\"\n                color={canInc ? \"inherit\" : \"disabled\"}\n              />\n            </StyledInputControl>\n          </StyledInputControls>\n        )}\n      </StyledInputContainer>\n      {/* Hide the \"Please enter to apply\" text in small widget sizes */}\n      {width > breakpoints.hideWidgetDetails && (\n        <StyledInstructionsContainer clearable={clearable}>\n          <InputInstructions\n            dirty={dirty}\n            value={formattedValue ?? \"\"}\n            inForm={isInForm({ formId: element.formId })}\n          />\n        </StyledInstructionsContainer>\n      )}\n    </div>\n  )\n}\n\nexport default withTheme(NumberInput)\n"],"mappings":"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"}